<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.icia.web.dao.WDReviewDao">
<!-- 리뷰 resultMap 시작 -->
<resultMap id="ReviewResultMap" type="com.icia.web.model.WDReview">
		<id column="R_SEQ" property="RSeq" />
		<id column="REZ_NO" property="rezNo" />
    	<result column="USER_ID" property="UserId" />
    	<result column="U_NICKNAME" property="UNickName" />
        <result column="WDATE" property="WDate" />
        <result column="R_TITLE" property="RTitle" />
        <result column="R_CONTENT" property="RContent" />
        <result column="R_READ_CNT" property="RReadCnt" />
        <result column="REG_DATE" property="RegDate" />
        <result column="R_SCORE_STAR" property="RScore" />
        <result column="REZ_STATUS" property="rezStatus" />
        <result column="TODAY" property="today" />
        <result column="REVIEW_STATUS" property="reviewStatus" />
</resultMap>
<!-- 리뷰 resultMap 끝 -->

<!-- 리뷰파일 resultMap 시작 -->
<resultMap id="ReviewFileResultMap" type="com.icia.web.model.WDReviewFile">
		    <id column="R_SEQ" property="rSeq" />
		    <id column="R_FILE_SEQ" property="rFileSeq" />
		    <result column="R_FILE_NAME" property="rFileName" />
		    <result column="R_FILE_ORG_NAME" property="rFileOrgName" />
		    <result column="R_FILE_EXT" property="rFileExt" />
		    <result column="R_FILE_SIZE" property="rFileSize" />
		    <result column="REG_DATE" property="regDate" />
</resultMap>
<!-- 리뷰파일 resultMap 끝 -->

<!-- 리뷰 게시물 총 수 체크 시작 -->
<select id="ReviewListCount" parameterType="com.icia.web.model.WDReview" resultType="long">
SELECT
    COUNT(A.R_SEQ) CNT
FROM
    WD_REVIEW A, WD_REZ B
<if test='searchValue != null and searchValue != ""'>     
    , WD_HALL C
</if>    
WHERE
    A.REZ_NO = B.REZ_NO
<if test='searchValue != null and searchValue != ""'> 
AND 
    B.WH_CODE = C.WH_CODE
AND
    B.H_CODE = C.H_CODE

AND
    C.H_NAME LIKE '%' || #{searchValue} || '%'
</if>
</select>
<!-- 리뷰 게시물 총 수 체크 끝 -->

<!-- 리뷰 리스트 시작 -->
<select id="ReviewList" parameterType="com.icia.web.model.WDReview" resultMap="ReviewResultMap">
SELECT
    R_SEQ,
    USER_ID,
    U_NICKNAME,
    WDATE,
    R_TITLE,
    R_CONTENT,
    R_READ_CNT,
    REG_DATE,
    R_SCORE_STAR,
    REZ_NO
FROM (SELECT
            ROWNUM RNUM,
            R_SEQ,
            USER_ID,
            U_NICKNAME,
            WDATE,
            R_TITLE,
            R_CONTENT,
            R_READ_CNT,
            REG_DATE,
            R_SCORE_STAR,
            REZ_NO
        FROM ( SELECT
                    A.R_SEQ,
                    A.USER_ID,
                    NVL(B.U_NICKNAME , '') U_NICKNAME,
                    NVL(A.WDATE, '') WDATE,
                    NVL(A.R_TITLE, '') R_TITLE,
                    NVL(A.R_CONTENT, '') R_CONTENT,
                    NVL(A.R_READ_CNT, 0) R_READ_CNT,
                    NVL(TO_CHAR(A.REG_DATE, 'YYYY.MM.DD HH24:MI:SS'), '') REG_DATE,
                    NVL(A.R_SCORE_STAR, 0), R_SCORE_STAR,
                    A.REZ_NO
                FROM
                    WD_REVIEW A, WD_USER B, WD_REZ C
<if test='searchValue != null and searchValue != ""'>                     
                    , WD_HALL D
</if>                    
                WHERE
                    A.USER_ID = B.USER_ID
                AND
                    A.REZ_NO = C.REZ_NO
<if test='searchValue != null and searchValue != ""'>                      
                AND
                    C.WH_CODE = D.WH_CODE
                AND
                    C.H_CODE =  D.H_CODE
                  
                AND
                    D.H_NAME LIKE '%' || #{searchValue} || '%'
</if>                          
                ORDER BY R_SEQ ASC))
WHERE
    RNUM <![CDATA[>=]]> #{startRow}
AND
    RNUM <![CDATA[<=]]> #{endRow}
</select>
<!-- 리뷰 리스트 끝 -->

<!-- 리뷰 조회 시작 -->
<select id="ReviewSelect" parameterType="long" resultMap="ReviewResultMap">
SELECT
        A.R_SEQ,
        A.USER_ID,
        NVL(B.U_NICKNAME , '') U_NICKNAME,
        NVL(A.WDATE, '') WDATE,
        NVL(A.R_TITLE, '') R_TITLE,
        NVL(A.R_CONTENT, '') R_CONTENT,
        NVL(A.R_READ_CNT, 0) R_READ_CNT,
        NVL(TO_CHAR(A.REG_DATE, 'YYYY.MM.DD HH24:MI:SS'), '') REG_DATE,
        NVL(A.R_SCORE_STAR, 0), R_SCORE_STAR,
        A.REZ_NO
    FROM
        WD_REVIEW A, WD_USER B
    WHERE
        R_SEQ = #{value}
    AND
        A.USER_ID = B.USER_ID
</select>
<!-- 리뷰 조회 끝 -->

<!-- 리뷰 조회수 증가 시작 -->
<update id="ReviewReadCntPlus" parameterType="long">
UPDATE WD_REVIEW
   SET R_READ_CNT = R_READ_CNT + 1
 WHERE R_SEQ = #{value}
 </update>
<!-- 리뷰 조회수 증가 끝 -->

<!-- 리뷰 첨부파일 조회 시작 -->
<select id="ReviewFileSelect" parameterType="long" resultMap="ReviewFileResultMap">
SELECT
    R_SEQ,
    R_FILE_SEQ,
    NVL(R_FILE_NAME, '') R_FILE_NAME,
    NVL(R_FILE_ORG_NAME, '') R_FILE_ORG_NAME,
    NVL(R_FILE_EXT, '') R_FILE_EXT,
    NVL(R_FILE_SIZE, 0) R_FILE_SIZE,
    NVL(TO_CHAR(REG_DATE, 'YYYY.MM.DD HH24:MI:SS'), '') REG_DATE
FROM
    WD_REVIEW_FILE
WHERE
    R_SEQ = #{value}
AND
    R_FILE_SEQ = 1
</select>
<!-- 리뷰 첨부파일 조회 끝 -->

<!-- 리뷰 작성버튼 클랙했을때 예약내역 조회해서 결제상태 확인 시작 -->
<select id="ReviewRezCheck" parameterType="string" resultType="string">
SELECT 
    NVL(A.REZ_STATUS, 'N') REZ_STATUS
FROM
    WD_REZ A, WD_USER B
WHERE
    B.USER_ID = #{value}
AND
    B.USER_ID = A.USER_ID
</select>
<!-- 리뷰 작성버튼 클랙했을때 예약내역 조회해서 결제상태 확인 종료 -->

<!-- 리뷰 작성 시작 -->
<insert id="ReviewInsert" parameterType="com.icia.web.model.WDReview">
<!-- ###### 선행처리기(시퀀스번호 생성 시작) : 인서트문 실행하기전에 여기 있는거 먼저 실행해~ ###### -->
<selectKey resultType = "long" keyProperty="RSeq" order = "BEFORE">
   SELECT SEQ_R_SEQ.NEXTVAL FROM DUAL
</selectKey>
<!-- ###### 선행처리기(시퀀스번호 생성 끝) ###### -->
INSERT INTO WD_REVIEW (
    R_SEQ,
    USER_ID,
    WDATE,
    R_TITLE,
    R_CONTENT,
    R_READ_CNT,
    REG_DATE,
    R_SCORE_STAR,
    REZ_NO,
    REVIEW_STATUS
) VALUES (
    #{RSeq},
    #{UserId},
    #{WDate},
    #{RTitle},
    #{RContent},
    0,
    SYSDATE,
    #{RScore},
    #{rezNo},
    'Y'
)
</insert>
<!-- 리뷰 작성 끝 -->

<!-- 리뷰테이블 작성 전 예약테이블 정보 가져오기 -->
<select id="rezCheck" parameterType="string" resultMap="ReviewResultMap">
SELECT
    NVL(REZ_NO,'') REZ_NO,
    NVL(REZ_STATUS, 'N') REZ_STATUS,
    NVL(WDATE, '') WDATE,
    USER_ID,
    TO_CHAR(SYSDATE, 'YYYYMMDD') TODAY
FROM
    WD_REZ
WHERE
    REZ_NO = #{value}
AND
    REZ_STATUS = 'Y'
</select>
<!-- 리뷰테이블 작성 전 예약테이블 정보 가져오기 -->

<!-- 첨부파일 등록 시작 -->
<insert id="reviewFileInsert" parameterType="com.icia.web.model.WDReviewFile">
INSERT INTO WD_REVIEW_FILE (
    R_SEQ,
    R_FILE_SEQ,
    R_FILE_NAME,
    R_FILE_ORG_NAME,
    R_FILE_EXT,
    R_FILE_SIZE,
    REG_DATE
) VALUES (
    #{rSeq},
    #{rFileSeq},
    #{rFileName},
    #{rFileOrgName},
    #{rFileExt},
    #{rFileSize},
    SYSDATE
)
</insert>
<!-- 첨부파일 등록 끝 -->

<!-- 리뷰 게시물 삭제 -->
<delete id="reviewDelete" parameterType="long">
DELETE FROM WD_REVIEW
WHERE
        R_SEQ = #{value}
</delete>
<!-- 리뷰 게시물 삭제 -->

<!-- 리뷰 게시물 첨부파일 삭제 -->
<delete id="reviewDeleteFile" parameterType="long">
DELETE FROM WD_REVIEW_FILE
WHERE
        R_SEQ = #{value}
</delete>
<!-- 리뷰 게시물 첨부파일 삭제 -->

<!-- 리뷰 게시글 수정 -->
<update id="reviewUpdate" parameterType="com.icia.web.model.WDReview">
UPDATE WD_REVIEW
SET
    R_TITLE = #{RTitle},
    R_CONTENT = #{RContent},
    R_SCORE_STAR = #{RScore}
WHERE
        R_SEQ = #{RSeq}
</update>
<!-- 리뷰 게시글 수정 -->

<!-- 리뷰 중복 작성 불가능하게 체크 시작-->
<select id="reviewOverlapCheck" parameterType="string" resultType="string">
SELECT
    NVL(REVIEW_STATUS, 'N') REVIEW_STATUS
FROM 
     WD_REZ
WHERE
	REZ_NO = #{value}
</select>
<!-- 리뷰 중복 작성 불가능하게 체크 끝-->

<!-- 리뷰 작성처리 -->
<update id="reviewCPT" parameterType="string">
UPDATE WD_REZ
SET
    REVIEW_STATUS = 'Y'
WHERE
        REZ_NO = #{value}
</update>
<!-- 리뷰 작성처리 -->
</mapper>